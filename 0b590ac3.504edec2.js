(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{104:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),u=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(n),m=r,f=l["".concat(s,".").concat(m)]||l[m]||d[m]||a;return n?o.a.createElement(f,i(i({ref:t},p),{},{components:n})):o.a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),a=(n(0),n(104)),s={id:"setup",title:"Initialize Connections to the CKB Node"},i={unversionedId:"tutorials/setup",id:"tutorials/setup",isDocsHomePage:!1,title:"Initialize Connections to the CKB Node",description:"Step 1. set up an RPC connection to the CKB node defined in the environment file.",source:"@site/docs\\tutorials\\setup.md",slug:"/tutorials/setup",permalink:"/lumos_doc/docs/tutorials/setup",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/tutorials/setup.md",version:"current"},c=[],p={toc:c};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Step 1. set up an RPC connection to the CKB node defined in the environment file. "),Object(a.b)("p",null,"The environment file specifies ports, urls and directories used by the server."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'import dotenv from "dotenv";\nimport express from "express";\nimport http from "http";\nimport bodyParser from "body-parser";\nimport cors from "cors";\nimport { Indexer, TransactionCollector } from "@ckb-lumos/indexer";\nimport { initializeConfig, getConfig } from "@ckb-lumos/config-manager";\nimport { RPC } from "ckb-js-toolkit";\n\n// Configure environment\ndotenv.config();\ninitializeConfig();\n\n// Initialize Services\nexport const rpc = new RPC(process.env.RPC_URL);\n')),Object(a.b)("p",null,"Step 2. Set up a Lumos indexer with a connection to the same node"),Object(a.b)("p",null,"This step is to use the Lumos indexer to maintain a local database of cells for efficient transaction generation."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"export const indexer = new Indexer(\n  process.env.RPC_URL,\n  process.env.INDEXER_DATA_DIR\n);\n")),Object(a.b)("p",null,"Step 3. Set up some express middleware for parsing JSON input and for accepting cross-site requests from the local client."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'// Server Setup\nconst app = express();\napp.use(bodyParser.json());\n// Allow CORS for localhost\napp.use(\n  cors({\n    origin: "*",\n    credentials: true,\n  })\n);\n')),Object(a.b)("p",null,"Step 4. Bundle routes into files and include them at different base resources"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'\nimport indexerRoutes from "./routes/indexer";\nimport ckbRoutes from "./routes/ckb";\nimport generalRoutes from "./routes/general";\nimport nftRoutes from "./routes/nft";\nimport sudtRoutes from "./routes/sudt";\nimport sudtSaleRoutes from "./routes/sudt-sale";\n\n// Routes\napp.use("/", generalRoutes);\napp.use("/indexer", indexerRoutes);\napp.use("/ckb", ckbRoutes);\napp.use("/nft", nftRoutes);\napp.use("/sudt", sudtRoutes);\napp.use("/sudt-sale", sudtSaleRoutes);\n\n')),Object(a.b)("p",null,"Step 5. Start the indexer and announce that the server is running"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"app.listen(process.env.PORT, () => {\n  indexer.startForever();\n  console.log(`The server is listening on port ${process.env.PORT}`);\n});\n")))}u.isMDXComponent=!0}}]);