(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=b(n),u=r,f=p["".concat(i,".").concat(u)]||p[u]||d[u]||o;return n?a.a.createElement(f,c(c({ref:t},l),{},{components:n})):a.a.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),o=(n(0),n(108)),i={id:"installckb",title:"Install and Configure Nervos CKB"},c={unversionedId:"tutorials/installckb",id:"tutorials/installckb",isDocsHomePage:!1,title:"Install and Configure Nervos CKB",description:"If Nervos CKB is already installed, perform step 6 to start the CKB Node directly.",source:"@site/docs\\tutorials\\install.md",slug:"/tutorials/installckb",permalink:"/lumos_doc/docs/tutorials/installckb",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/tutorials/install.md",version:"current",sidebar:"someSidebar",previous:{title:"Developing CKB DApps with Lumos",permalink:"/lumos_doc/docs/quickstart/workflow"},next:{title:"Config Manager Setup",permalink:"/lumos_doc/docs/tutorials/config"}},s=[{value:"<strong>Step 1. Download the latest CKB binary file from the CKB releases page on GitHub.</strong>",id:"step-1-download-the-latest-ckb-binary-file-from-the-ckb-releases-page-on-github",children:[]},{value:"<strong>Step 2. Verify the binaries are working and check versions.</strong>",id:"step-2-verify-the-binaries-are-working-and-check-versions",children:[]},{value:"<strong>Step 3. Modify the chain config to skip difficulty adjustment, and set all epoch to contain 10 blocks.</strong>",id:"step-3-modify-the-chain-config-to-skip-difficulty-adjustment-and-set-all-epoch-to-contain-10-blocks",children:[]},{value:"<strong>Step 4. Modify miner config to generate a new block every second.</strong>",id:"step-4-modify-miner-config-to-generate-a-new-block-every-second",children:[]},{value:"<strong>Step 5. Use a specific private key as the wallet used in miner.</strong>",id:"step-5-use-a-specific-private-key-as-the-wallet-used-in-miner",children:[]},{value:"<strong>Step 6. Start the CKB node with the dev chain.</strong>",id:"step-6-start-the-ckb-node-with-the-dev-chain",children:[]},{value:"<strong>Step 7. Start the CKB miner in a different terminal.</strong>",id:"step-7-start-the-ckb-miner-in-a-different-terminal",children:[]}],l={toc:s};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"If Nervos CKB is already installed, perform step 6 to start the CKB Node directly."),Object(o.b)("p",null,"To install and configure Nervos CKB:"),Object(o.b)("h3",{id:"step-1-download-the-latest-ckb-binary-file-from-the-ckb-releases-page-on-github"},Object(o.b)("strong",{parentName:"h3"},"Step 1. Download the latest CKB binary file from the CKB releases page on ",Object(o.b)("a",Object(r.a)({parentName:"strong"},{href:"https://github.com/nervosnetwork/ckb/releases"}),"GitHub"),".")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"$ export TOP=$(pwd)\n # I'm testing this on a Linux machine, if you use other platforms, please adjust\n # this accordingly.\n$ curl -LO https://github.com/nervosnetwork/ckb/releases/download/v0.39.0/ckb_v0.39.0_x86_64-unknown-linux-gnu.tar.gz\n$ tar xzf ckb_v0.39.0_x86_64-unknown-linux-gnu.tar.gz\n$ export PATH=$PATH:$TOP/ckb_v0.39.0_x86_64-unknown-linux-gnu\n")),Object(o.b)("h3",{id:"step-2-verify-the-binaries-are-working-and-check-versions"},Object(o.b)("strong",{parentName:"h3"},"Step 2. Verify the binaries are working and check versions.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"$ ckb -V\nckb 0.39.0\n$ ckb init -C devnet -c dev\n")),Object(o.b)("h3",{id:"step-3-modify-the-chain-config-to-skip-difficulty-adjustment-and-set-all-epoch-to-contain-10-blocks"},Object(o.b)("strong",{parentName:"h3"},"Step 3. Modify the chain config to skip difficulty adjustment, and set all epoch to contain 10 blocks.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"$ ed devnet/specs/dev.toml <<EOF\n91d\n90a\ngenesis_epoch_length = 10\npermanent_difficulty_in_dummy = true\n.\nwq\nEOF\n")),Object(o.b)("h3",{id:"step-4-modify-miner-config-to-generate-a-new-block-every-second"},Object(o.b)("strong",{parentName:"h3"},"Step 4. Modify miner config to generate a new block every second.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"$ ed devnet/ckb-miner.toml <<EOF\n39s/5000/1000/\nwq\nEOF\n")),Object(o.b)("h3",{id:"step-5-use-a-specific-private-key-as-the-wallet-used-in-miner"},Object(o.b)("strong",{parentName:"h3"},"Step 5. Use a specific private key as the wallet used in miner.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note"),": Do not use this private key in other place."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'$ ed devnet/ckb.toml <<EOF\n143a\n[block_assembler]\ncode_hash = "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8"\n# private key: 0x29159d8bb4b27704b168fc7fae70ffebf82164ce432b3f6b4c904a116a969f19\nargs = "0xcbfbb9edb5838e2d61061c3fc69eaaa5fdbd3273"\nhash_type = "type"\nmessage = "0x"\n.\nwq\nEOF\n')),Object(o.b)("h3",{id:"step-6-start-the-ckb-node-with-the-dev-chain"},Object(o.b)("strong",{parentName:"h3"},"Step 6. Start the CKB node with the dev chain.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"$ ckb run -C devnet\n")),Object(o.b)("h3",{id:"step-7-start-the-ckb-miner-in-a-different-terminal"},Object(o.b)("strong",{parentName:"h3"},"Step 7. Start the CKB miner in a different terminal.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"$ export TOP=$(pwd)\n$ export PATH=$PATH:$TOP/ckb_v0.39.0_x86_64-unknown-linux-gnu\n$ ckb miner -C devnet\n")))}b.isMDXComponent=!0}}]);