(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{123:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),i=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),u=i(n),d=r,m=u["".concat(o,".").concat(d)]||u[d]||p[d]||c;return n?a.a.createElement(m,l(l({ref:t},b),{},{components:n})):a.a.createElement(m,l({ref:t},b))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var b=2;b<c;b++)o[b]=n[b];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return i}));var r=n(3),a=n(7),c=(n(0),n(123)),o={id:"ckbaccounts",title:"CKB Accounts"},l={unversionedId:"concepts/ckbaccounts",id:"concepts/ckbaccounts",isDocsHomePage:!1,title:"CKB Accounts",description:"A CKB account is represented as a collection of live cells locked by a lock script. The ID of the account is the lock script args.",source:"@site/docs\\concepts\\ckbaccount.md",slug:"/concepts/ckbaccounts",permalink:"/lumos_doc/docs/concepts/ckbaccounts",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/concepts/ckbaccount.md",version:"current"},s=[],b={toc:s};function i(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"A CKB account is represented as a collection of live cells locked by a lock script. The ID of the account is the lock script args."),Object(c.b)("p",null,"The following table lists the elements of an account that are useful during the DApp development process."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Element"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"Lock","\xa0","script",Object(c.b)("br",null)),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("pre",null,"A lock script consists of three key parameters, including ",Object(c.b)("em",{parentName:"td"},"code_hash"),", ",Object(c.b)("em",{parentName:"td"},"hash_type")," and ",Object(c.b)("em",{parentName:"td"},"args"),".",Object(c.b)("br",null),"Example:",Object(c.b)("br",null),Object(c.b)("samp",null,"{",Object(c.b)("br",null),"\xa0","code_hash: '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8',",Object(c.b)("br",null)," ","\xa0","hash_type:","\xa0","'type',",Object(c.b)("br",null),"\xa0","args: '0x82be41cf167110e6c00e79009a3fd4d9abe8c65a'",Object(c.b)("br",null),"}")))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"Address"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("pre",null,"A CKB address packages a lock script into a single line in a verifiable and human-readable format.",Object(c.b)("br",null),"Example:",Object(c.b)("br",null),Object(c.b)("samp",null,"ckt1qyqg90jpeut8zy8xcq88jqy68l2dn2lgcedqd7ye7n")))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"Private","\xa0","key"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("pre",null,"A private key is a string of letters and numbers that is normally stored in a wallet. It proves the ownership of cryptocurrencies or digital assets and allows the user to send his/her cryptocurrency or digital assets to other payment addresses.",Object(c.b)("br",null),"A private key must be kept secret at all times. Anyone with the key has the ability to access the cryptocurrency or digital assets."))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"CKB","\xa0","capacity"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("pre",null,"CKB capacity of an account is the total CKB capacity of the live cells of an account.",Object(c.b)("br",null),Object(c.b)("strong",{parentName:"td"},"Note"),": If an account wants to perform transaction actions like transferring CKB to other accounts, the account must have enough CKB capacity that is equal or more than the minimal CKB requirement of a transaction.",Object(c.b)("br",null),"For example, the minimum CKB capacity requirement is 61 ",Object(c.b)("a",{parentName:"td",href:"https://docs.nervos.org/docs/basics/glossary#shannon",title:"One CKByte is equal to 100,000,000 Shannons."},"CKB")," (6,100,000,000 shannons) for one common transaction, and 102 CKB (10,200,000,000 shannons) for a DAO deposit transaction."))))),Object(c.b)("p",null,"For more information about creating CKB accounts, see ",Object(c.b)("a",{parentName:"p",href:"../preparation/createaccount"},"Create Accounts"),"."))}i.isMDXComponent=!0}}]);