(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{119:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"b",(function(){return u}));var i=t(0),r=t.n(i);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),b=function(e){var n=r.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},f=function(e){var n=b(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},g=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=b(t),g=i,u=f["".concat(a,".").concat(g)]||f[g]||s[g]||o;return t?r.a.createElement(u,c(c({ref:n},p),{},{components:t})):r.a.createElement(u,c({ref:n},p))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=g;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=t[p];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},86:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return b}));var i=t(3),r=t(7),o=(t(0),t(119)),a={id:"config",title:"Set Up the Config Manager"},c={unversionedId:"tutorials/config",id:"tutorials/config",isDocsHomePage:!1,title:"Set Up the Config Manager",description:"Config Manager",source:"@site/docs\\tutorials\\config.md",slug:"/tutorials/config",permalink:"/lumos_doc/docs/tutorials/config",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/tutorials/config.md",version:"current",sidebar:"someSidebar",previous:{title:"Install Lumos",permalink:"/lumos_doc/docs/tutorials/installlumos"},next:{title:"Set Up the Lumos Indexer",permalink:"/lumos_doc/docs/tutorials/indexer"}},l=[{value:"Config Manager",id:"config-manager",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Set Up the Config Manager by Using Pre-defined Configurations",id:"set-up-the-config-manager-by-using-pre-defined-configurations",children:[]},{value:"Set Up the Config Manager by Using a Local Config File",id:"set-up-the-config-manager-by-using-a-local-config-file",children:[]}],p={toc:l};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"config-manager"},"Config Manager"),Object(o.b)("p",null,"The config manager  (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/config-manager"),") supports the DApp to boot with a specific chain configuration. All the other components in Lumos can leverage the configuration from the config manager directly."),Object(o.b)("p",null,"A DApp can set up the config manger by one of the following variables:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"LUMOS_CONFIG_NAME"),":  To boot the DApp with the configurations of the ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"},"Mainnet"))," or ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"},"Testnet"))," network, specify the ",Object(o.b)("var",null,"LUMOS_CONFIG_NAME")," variable with the pre-defined configurations."),Object(o.b)("p",{parentName:"li"},"The pre-defined configurations includes: "),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"LINA"),": Mainnet pre-defined configurations")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"AGGRON4"),": Testnet pre-defined configurations "),Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Note"),": When Testnet is reset, the Lumos config manager can be upgraded with the new Testnet configurations by a initializing step."))),Object(o.b)("p",{parentName:"li"},"For more information, see ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"../tutorials/config#set-up-the-config-manager-by-using-pre-defined-configurations"}),"Set Up the Config Manager by Using Pre-defined Configurations"),". ")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"LUMOS_CONFIG_FILE"),": To boot the DApp with the configurations of the ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"},"DEV chain")),", specify the ",Object(o.b)("var",null,"LUMOS_CONFIG_FILE")," variable with a local config file. "),Object(o.b)("p",{parentName:"li"},"For more information, see ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"../tutorials/config#set-up-the-config-manager-by-using-a-local-config-file"}),"Set Up the Config Manager by Using a Local Config File"),"."))),Object(o.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(o.b)("p",null,"The following prerequisites apply for setting up the config manager:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Node.js is installed."),Object(o.b)("li",{parentName:"ul"},"Lumos packages are installed.")),Object(o.b)("h2",{id:"set-up-the-config-manager-by-using-pre-defined-configurations"},"Set Up the Config Manager by Using Pre-defined Configurations"),Object(o.b)("p",null,"The following example sets up the config manager to boot the DApp with the pre-defined configurations of Mainnet by specifying the variable ",Object(o.b)("code",null,"LUMOS_CONFIG_NAME")," with ",Object(o.b)("b",null,"LINA"),"."),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),'import { env } from "process";\nimport { getConfig, initializeConfig } from "@ckb-lumos/config-manager";\nenv.LUMOS_CONFIG_NAME = "LINA";\ninitializeConfig();\nexport const CONFIG = getConfig();\n')),Object(o.b)("p",null,"To set up the config manger to boot the DApp with the pre-defined configurations of Testnet, you can specify the variable with ",Object(o.b)("b",null,"AGGRON4"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),'import { env } from "process";\nimport { getConfig, initializeConfig } from "@ckb-lumos/config-manager";\nenv.LUMOS_CONFIG_NAME = "AGGRON4";\ninitializeConfig();\nexport const CONFIG = getConfig();\n')),Object(o.b)("h2",{id:"set-up-the-config-manager-by-using-a-local-config-file"},"Set Up the Config Manager by Using a Local Config File"),Object(o.b)("p",null,"The ",Object(o.b)("var",null,"LUMOS_CONFIG_FILE")," variable can be set pointing to a configuration file. Lumos reads the configurations from that configuration file.  "),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note"),": If the ",Object(o.b)("inlineCode",{parentName:"p"},"LUMOS_CONFIG_FILE")," variable is not set, Lumos reads configurations from the ",Object(o.b)("inlineCode",{parentName:"p"},"config.json")," file in the current directory."),Object(o.b)("p",null,"The following example sets up the config manager to boot the DApp with the configurations of the ",Object(o.b)("strong",{parentName:"p"},"DEV chain"),"."),Object(o.b)("p",null,"Step 1. Prepare the config.json file in the project root directory."),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json",metastring:'title="hellolumos/config.json"',title:'"hellolumos/config.json"'}),'{\n  "PREFIX": "ckt",\n  "SCRIPTS": {\n    "SECP256K1_BLAKE160": {\n      "CODE_HASH": "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",\n      "HASH_TYPE": "type",\n      "TX_HASH": "0xace5ea83c478bb866edf122ff862085789158f5cbff155b7bb5f13058555b708",\n      "INDEX": "0x0",\n      "DEP_TYPE": "dep_group",\n      "SHORT_ID": 0\n    },\n    "SECP256K1_BLAKE160_MULTISIG": {\n      "CODE_HASH": "0x5c5069eb0857efc65e1bca0c07df34c31663b3622fd3876c876320fc9634e2a8",\n      "HASH_TYPE": "type",\n      "TX_HASH": "0xace5ea83c478bb866edf122ff862085789158f5cbff155b7bb5f13058555b708",\n      "INDEX": "0x1",\n      "DEP_TYPE": "dep_group",\n      "SHORT_ID": 1\n    },\n    "DAO": {\n      "CODE_HASH": "0x82d76d1b75fe2fd9a27dfbaa65a039221a380d76c926f378d3f81cf3e7e13f2e",\n      "HASH_TYPE": "type",\n      "TX_HASH": "0xa563884b3686078ec7e7677a5f86449b15cf2693f3c1241766c6996f206cc541",\n      "INDEX": "0x2",\n      "DEP_TYPE": "code"\n    }\n  }\n}\n')),Object(o.b)("p",null,"Step 2. Set up the config manager in the DApp as follows."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript",metastring:'title="hellolumos/src/index.ts"',title:'"hellolumos/src/index.ts"'}),'import { env } from "process";\nimport { getConfig, initializeConfig } from "@ckb-lumos/config-manager";\nenv.LUMOS_CONFIG_FILE = env.LUMOS_CONFIG_FILE || "./config.json";\ninitializeConfig();\nexport const CONFIG = getConfig();\n')))}b.isMDXComponent=!0}}]);