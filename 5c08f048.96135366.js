(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{112:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"b",(function(){return u}));var a=t(0),i=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),s=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},f=function(e){var n=s(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},g=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),f=s(t),g=a,u=f["".concat(r,".").concat(g)]||f[g]||b[g]||o;return t?i.a.createElement(u,c(c({ref:n},l),{},{components:t})):i.a.createElement(u,c({ref:n},l))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=g;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var l=2;l<o;l++)r[l]=t[l];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},83:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return s}));var a=t(3),i=t(7),o=(t(0),t(112)),r={id:"config",title:"Set Up the Config Manager"},c={unversionedId:"tutorials/config",id:"tutorials/config",isDocsHomePage:!1,title:"Set Up the Config Manager",description:"Config Manager",source:"@site/docs\\tutorials\\config.md",slug:"/tutorials/config",permalink:"/lumos_doc/docs/tutorials/config",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/tutorials/config.md",version:"current",sidebar:"someSidebar",previous:{title:"Create an Account",permalink:"/lumos_doc/docs/preparation/createaccount"},next:{title:"Set Up the Database",permalink:"/lumos_doc/docs/tutorials/database"}},p=[{value:"Config Manager",id:"config-manager",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Set Up the Config Manager by Using Pre-defined Configurations",id:"set-up-the-config-manager-by-using-pre-defined-configurations",children:[]},{value:"Set Up the Config Manager by Using a Local Config File",id:"set-up-the-config-manager-by-using-a-local-config-file",children:[{value:"Step 1. Prepare the config.json file.",id:"step-1-prepare-the-configjson-file",children:[]},{value:"Step 2. Set up the config manager in the DApp code as follows.",id:"step-2-set-up-the-config-manager-in-the-dapp-code-as-follows",children:[]}]}],l={toc:p};function s(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"config-manager"},"Config Manager"),Object(o.b)("p",null,"The config manager deals with differences between chains, such as the Mainnet, Testnet, or numerous DEV chains. Each chain is abstracted into an individual configuration file. "),Object(o.b)("p",null,"When a configuration file is loaded, the config manager handles the chain specific logic that saves corresponding coding effort for configuration management."),Object(o.b)("p",null,"The config manager supports the DApp to boot with a specific chain configuration. All the other components in Lumos can leverage the configuration from the config manager directly."),Object(o.b)("p",null,"There are two options for setting up the config manager:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"For a DApp to connect to a ",Object(o.b)("strong",{parentName:"li"},Object(o.b)("em",{parentName:"strong"},"Mainnet"))," or ",Object(o.b)("strong",{parentName:"li"},Object(o.b)("em",{parentName:"strong"},"Testnet"))," node, ",Object(o.b)("strong",{parentName:"li"},"setup the config manager by using pre-defined configurations"),". The pre-defined configurations is specified by the ",Object(o.b)("inlineCode",{parentName:"li"},"LUMOS_CONFIG_NAME")," variable."),Object(o.b)("li",{parentName:"ul"},"For a DApp to connect to a CKB node on ",Object(o.b)("strong",{parentName:"li"},Object(o.b)("em",{parentName:"strong"},"DEV chain")),", ",Object(o.b)("strong",{parentName:"li"},"setup the configuration manager by using a local config file"),". The local config file is specified by the ",Object(o.b)("inlineCode",{parentName:"li"},"LUMOS_CONFIG_FILE")," variable. ")),Object(o.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(o.b)("p",null,"The following prerequisites apply for setting up the config manager:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Node.js is installed."),Object(o.b)("li",{parentName:"ul"},"Lumos packages are installed.")),Object(o.b)("h2",{id:"set-up-the-config-manager-by-using-pre-defined-configurations"},"Set Up the Config Manager by Using Pre-defined Configurations"),Object(o.b)("p",null,"For the DApp to connect a Mainnet or Testnet node, choose corresponding pre-defined configurations for setting up the config manager:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"LINA"),": Mainnet configurations")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"AGGRON4"),": Testnet configurations "),Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Note"),": When Testnet is reset, the config manager of Lumos must be upgraded with new Testnet configurations."))),Object(o.b)("p",null,"The following example sets up the config manager for a CKB ",Object(o.b)("strong",{parentName:"p"},"Mainnet")," node by specifying the variable ",Object(o.b)("code",null,"LUMOS_CONFIG_NAME")," with ",Object(o.b)("b",null,"LINA"),". You can specify the variable with ",Object(o.b)("b",null,"AGGRON4")," for a CKB ",Object(o.b)("strong",{parentName:"p"},"Testnet")," node."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'title="/mydapp/index.ts"',title:'"/mydapp/index.ts"'}),'import { env } from "process";\nimport { getConfig, initializeConfig } from "@ckb-lumos/config-manager";\nenv.LUMOS_CONFIG_NAME = "LINA";\ninitializeConfig();\nexport const CONFIG = getConfig();\n')),Object(o.b)("h2",{id:"set-up-the-config-manager-by-using-a-local-config-file"},"Set Up the Config Manager by Using a Local Config File"),Object(o.b)("p",null,"For the DApp to connect a CKB node on ",Object(o.b)("strong",{parentName:"p"},"DEV chain"),", use a local configuration file for setting up the config manager."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"LUMOS_CONFIG_FILE")," variable can be set pointing to a configuration file. Lumos reads the configurations from that configuration file.  "),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note"),": If the ",Object(o.b)("inlineCode",{parentName:"p"},"LUMOS_CONFIG_FILE")," variable is not set, Lumos reads configurations from the ",Object(o.b)("inlineCode",{parentName:"p"},"config.json")," file in the current directory."),Object(o.b)("p",null,"The following example sets up the config manager for a CKB node on ",Object(o.b)("strong",{parentName:"p"},"DEV chain"),"."),Object(o.b)("h3",{id:"step-1-prepare-the-configjson-file"},"Step 1. Prepare the config.json file."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="mydapp/config.json"',title:'"mydapp/config.json"'}),'{\n  "PREFIX": "ckt",\n  "SCRIPTS": {\n    "SECP256K1_BLAKE160": {\n      "CODE_HASH": "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",\n      "HASH_TYPE": "type",\n      "TX_HASH": "0xace5ea83c478bb866edf122ff862085789158f5cbff155b7bb5f13058555b708",\n      "INDEX": "0x0",\n      "DEP_TYPE": "dep_group",\n      "SHORT_ID": 0\n    },\n    "SECP256K1_BLAKE160_MULTISIG": {\n      "CODE_HASH": "0x5c5069eb0857efc65e1bca0c07df34c31663b3622fd3876c876320fc9634e2a8",\n      "HASH_TYPE": "type",\n      "TX_HASH": "0xace5ea83c478bb866edf122ff862085789158f5cbff155b7bb5f13058555b708",\n      "INDEX": "0x1",\n      "DEP_TYPE": "dep_group",\n      "SHORT_ID": 1\n    },\n    "DAO": {\n      "CODE_HASH": "0x82d76d1b75fe2fd9a27dfbaa65a039221a380d76c926f378d3f81cf3e7e13f2e",\n      "HASH_TYPE": "type",\n      "TX_HASH": "0xa563884b3686078ec7e7677a5f86449b15cf2693f3c1241766c6996f206cc541",\n      "INDEX": "0x2",\n      "DEP_TYPE": "code"\n    }\n  }\n}\n')),Object(o.b)("h3",{id:"step-2-set-up-the-config-manager-in-the-dapp-code-as-follows"},"Step 2. Set up the config manager in the DApp code as follows."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'title="mydapp/index.ts"',title:'"mydapp/index.ts"'}),'import { env } from "process";\nimport { getConfig, initializeConfig } from "@ckb-lumos/config-manager";\nenv.LUMOS_CONFIG_FILE = env.LUMOS_CONFIG_FILE || "./config.json";\ninitializeConfig();\nexport const CONFIG = getConfig();\n')))}s.isMDXComponent=!0}}]);