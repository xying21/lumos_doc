(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),l=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),p=l(n),u=r,d=p["".concat(c,".").concat(u)]||p[u]||m[u]||o;return n?a.a.createElement(d,i(i({ref:t},b),{},{components:n})):a.a.createElement(d,i({ref:t},b))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var b=2;b<o;b++)c[b]=n[b];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),o=(n(0),n(108)),c={id:"intro",title:"Overview",sidebar_label:"Overview"},i={unversionedId:"quickstart/intro",id:"quickstart/intro",isDocsHomePage:!1,title:"Overview",description:"Introduction",source:"@site/docs\\quickstart\\intro.md",slug:"/quickstart/intro",permalink:"/lumos_doc/docs/quickstart/intro",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/quickstart/intro.md",version:"current",sidebar_label:"Overview",sidebar:"someSidebar",next:{title:"Prerequisites",permalink:"/lumos_doc/docs/quickstart/prerequisites"}},s=[{value:"Introduction",id:"introduction",children:[]},{value:"Architecture",id:"architecture",children:[]},{value:"Resources",id:"resources",children:[]}],b={toc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"introduction"},"Introduction"),Object(o.b)("p",null,"Lumos is an open-source framework that was developed by the Nervos Developer Tools team for building Nervos CKB DApps. The framework is developed by using JavaScript and TypeScript in NodeJs environment."),Object(o.b)("p",null,"All the DApps running on CKB separate functionally into two parts: computation and verification according to the programming model of CKB. For more information about the CKB programming model, see ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0002-ckb/0002-ckb.md"}),"CKB whitepaper"),"."),Object(o.b)("p",null,"Either a desktop application or a server application that runs in NodeJS environment and serves as the off-chain computation part can be developed on top of Lumos. "),Object(o.b)("h2",{id:"architecture"},"Architecture"),Object(o.b)("p",null,"Lumos provides a set of fully comprehensive features and utilities with the components as shown in the architecture."),Object(o.b)("p",null,"The fundamental components, such as the ",Object(o.b)("strong",{parentName:"p"},"Lumos indexer"),", ",Object(o.b)("strong",{parentName:"p"},"common scripts")," and the ",Object(o.b)("strong",{parentName:"p"},"RPC")," components enable the DApp to query cells, assemble transactions and communicate with the CKB network."),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"},"HD cache manager")," and the ",Object(o.b)("strong",{parentName:"p"},"HD wallet manager")," components provide the functions that consolidate the strength of the Lumos framework. "),Object(o.b)("img",{src:"../../../img/CKB dapp with Lumos.png",width:"600"}),Object(o.b)("p",null,"Figure 1 Architecture of a CKB DApp Built with Lumos"),Object(o.b)("p",null,"The components can be classified into several groups according to their features."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Helper and Config")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Base"),": The base component (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/base"),") includes the core definitions and stateless functions that can be used in the other components. The ",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/base")," package can be used as a standalone library.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Helpers"),": The helpers component (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/helpers"),") defines interfaces, types "," and utilities that require to work under a CKB network. The network, testnet or mainnet, is specified by the config manager.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Config Manager"),": The config manager component (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/config-manager"),") connects to Nervos networks and deploys contracts to a locally running instance or one of Nervos's public networks."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Cell Provider")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Lumos Indexer"),": The Lumos indexer (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/indexer")," and ",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/sql-indexer"),") is a CKB cell indexer that fulfills the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.nervos.org/docs/reference/cell#index-query-assemble-pattern"}),"Index-Query-Assemble")," pattern. The Lumos indexer indexes cells and maintains a local database of the cells that provides an optimal way for querying cells.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Transaction Manager"),": The transaction manager (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/transaction-manager"),") can serve as an optional cell provider that enables the output cells of pending transactions to be usable for assembling new transactions."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Transaction Generator")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Common Scripts"),": The common scripts component (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/common-scripts"),") integrates known scripts on CKB. The scripts use a cell provider (the Lumos indexer or ",Object(o.b)("inlineCode",{parentName:"p"},"transactionManager"),") to collect cells and assemble transactions. Each script implements a specific  ",Object(o.b)("inlineCode",{parentName:"p"},"TransactionSkeleton"),"  for building transactions that forms a unified workflow for transaction generation."),Object(o.b)("p",{parentName:"li"},"The common scripts component can also integrate and leverage user customized CKB scripts. An example is included in the ",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/common-scripts")," package."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Communication")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"RPC"),": The RPC component (",Object(o.b)("inlineCode",{parentName:"li"},"@ckb-lumos/rpc"),") is responsible for the communication between the DApp and the CKB network.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Other Functions")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"HD cache manager"),": The HD cache manager (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/hd-cache"),") builds a memory cache for derived addresses and live cells of these addresses. It supports query functions, such as querying the balance of an HD wallet.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"HD wallet manager"),": The HD wallet manager (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/hd"),") supports ",Object(o.b)("em",{parentName:"p"},"mnemonic")," and ",Object(o.b)("em",{parentName:"p"},"keystore")," that are compatible with ",Object(o.b)("inlineCode",{parentName:"p"},"Neuron")," and ",Object(o.b)("inlineCode",{parentName:"p"},"ckb-cli"),"."))),Object(o.b)("h2",{id:"resources"},"Resources"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Resource"),Object(o.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Link"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Website"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(r.a)({parentName:"td"},{href:"https://docs.nervos.org/"}),"https://docs.nervos.org/"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"API Documentation"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(r.a)({parentName:"td"},{href:"https://nervosnetwork.github.io/lumos/globals.html"}),"https://nervosnetwork.github.io/lumos/globals.html"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Source Code"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(r.a)({parentName:"td"},{href:"https://github.com/nervosnetwork/lumos"}),"https://github.com/nervosnetwork/lumos"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Demos"),Object(o.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(r.a)({parentName:"td"},{href:"https://github.com/tspoff/hello-lumos"}),"Hello Lumos Dapp Template"))))))}l.isMDXComponent=!0}}]);