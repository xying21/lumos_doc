(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{119:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=r.a.createContext({}),b=function(e){var t=r.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),u=b(n),m=a,d=u["".concat(l,".").concat(m)]||u[m]||p[m]||c;return n?r.a.createElement(d,o(o({ref:t},i),{},{components:n})):r.a.createElement(d,o({ref:t},i))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var i=2;i<c;i++)l[i]=n[i];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),c=(n(0),n(119)),l={id:"hellolumos",title:"Hello Lumos"},o={unversionedId:"preparation/hellolumos",id:"preparation/hellolumos",isDocsHomePage:!1,title:"Hello Lumos",description:"The Hello Lumos example is designed to serve as the starting point for learning Lumos.",source:"@site/docs\\preparation\\hellolumos.md",slug:"/preparation/hellolumos",permalink:"/lumos_doc/docs/preparation/hellolumos",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/preparation/hellolumos.md",version:"current",sidebar:"someSidebar",previous:{title:"Create Accounts",permalink:"/lumos_doc/docs/preparation/createaccount"},next:{title:"Install Lumos",permalink:"/lumos_doc/docs/tutorials/installlumos"}},s=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Environment",id:"environment",children:[]},{value:"Steps",id:"steps",children:[{value:"Download the Hello Lumos example.",id:"download-the-hello-lumos-example",children:[]},{value:"Install dependencies.",id:"install-dependencies",children:[]},{value:"Update the account information.",id:"update-the-account-information",children:[]},{value:"Build the project.",id:"build-the-project",children:[]},{value:"Enter the Node.js REPL mode.",id:"enter-the-nodejs-repl-mode",children:[]},{value:"Execute the index.js file to start the server and include the required modules.",id:"execute-the-indexjs-file-to-start-the-server-and-include-the-required-modules",children:[]},{value:"Perform a common transfer transaction.",id:"perform-a-common-transfer-transaction",children:[]}]}],i={toc:s};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The Hello Lumos example is designed to serve as the starting point for learning Lumos. "),Object(c.b)("p",null,"The  example has the following structure:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"hellolumos/\n\u251c\u2500\u2500 src|accounts.ts\n\u251c\u2500\u2500 src|buildTXs.ts\n\u251c\u2500\u2500 src|index.ts\n\u251c\u2500\u2500 src|managekeys.ts\n\u251c\u2500\u2500 src|querycells.ts\n\u251c\u2500\u2500 src|querytransactions.ts\n\u251c\u2500\u2500 config.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 yarn.lock\n")),Object(c.b)("p",null,"All required dependencies for the Hello Lumos example are listed in package.json. To install the other Lumos packages, see ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"../tutorials/installlumos"}),"Install Lumos"),"."),Object(c.b)("p",null,"The index.ts file sets up the config manager and the Lumos indexer for the project. For more information about setting up the config manager, see ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"../tutorials/config"}),"Set Up the Config Manger"),". For more information about setting up the Lumos indexer, see ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"../tutorials/indexer"}),"Set Up the Lumos Indexer"),"."),Object(c.b)("p",null,"The functions in the source files, for example, querying on cells in querycells.ts, building transactions in buildTXs.ts are all facilitated based on the Lumos framework."),Object(c.b)("p",null,"The querycells.ts file implements several functions for querying on cells. For more information about querying on cells by using Lumos, see ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"../tutorials/querycells"}),"Query on Cells"),"."),Object(c.b)("p",null,"The querytransactions.ts file implements several functions for querying on transactions. For more information about querying on transactions by using Lumos, see ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"../tutorials/querytransactions"}),"Query on Transactions"),"."),Object(c.b)("p",null,"The buildTXs.ts file implements several functions for assembling common transfer transactions, DAO deposit and withdraw transactions. For more information about building transactions by using Lumos, see ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"../tutorials/buildtransactions"}),"Assembling Transactions"),"."),Object(c.b)("p",null,"This guide will help you to get a general idea about the usage of Lumos through a common transaction. The full code of the example can be found here. "),Object(c.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(c.b)("p",null,"The following Prerequisites apply for walking through this guide:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"The development environment is set up. For more information, see ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"../preparation/setupsystem"}),"Set Up the Development Environment"),"."),Object(c.b)("li",{parentName:"ul"},"The CKB node is installed and started. For more information, see ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"../preparation/installckb"}),"Install a CKB Node"),"."),Object(c.b)("li",{parentName:"ul"},"Two accounts, Alice and Bob are created. Alice is specified as the miner to receive mining rewards that is used for transactions. For more information, see ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"../preparation/createaccount"}),"Create Accounts"),".")),Object(c.b)("h2",{id:"environment"},"Environment"),Object(c.b)("p",null,"The following examples are verified on Ubuntu 20.04.2. Steps on the other platforms are similar and can be adjusted accordingly."),Object(c.b)("h2",{id:"steps"},"Steps"),Object(c.b)("h3",{id:"download-the-hello-lumos-example"},"Download the Hello Lumos example."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"$ cd\n$ git clone https://github.com/nervosnetwork/hellolumos\n")),Object(c.b)("h3",{id:"install-dependencies"},"Install dependencies."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ cd hellolumos\n$ yarn install\n")),Object(c.b)("details",null,Object(c.b)("summary",null,"CLICK ME"),Object(c.b)("p",null,Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'yarn install v1.22.10\n[1/4] Resolving packages...\n[2/4] Fetching packages...\ninfo fsevents@2.3.2: The platform "win32" is incompatible with this module.\ninfo "fsevents@2.3.2" is an optional dependency and failed compatibility check. Excluding it from installation.\n[3/4] Linking dependencies...\n[4/4] Building fresh packages...\nDone in 52.70s.\n')))),Object(c.b)("h3",{id:"update-the-account-information"},"Update the account information."),Object(c.b)("p",null,"Replace the value of ",Object(c.b)("inlineCode",{parentName:"p"},"PRIVATE_KEY"),", ",Object(c.b)("inlineCode",{parentName:"p"},"ADDRESS"),", ",Object(c.b)("inlineCode",{parentName:"p"},"ARGS")," and ",Object(c.b)("inlineCode",{parentName:"p"},"LOCKHASH")," for ALICE and BOB in the ",Object(c.b)("inlineCode",{parentName:"p"},"accounts.ts")," file with the account information you have prepared when creating accounts. For more information about creating accounts, see ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"../preparation/createaccount"}),"Create Accounts"),"."),Object(c.b)("p",null,"Example:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'title="hellolumos/src/accounts.ts"',title:'"hellolumos/src/accounts.ts"'}),'export const ALICE = {\n  PRIVATE_KEY:\n    "0xf2a91b1410f7308631b89603262448ba515cddac1ffe250265551c82fff3eb3a",\n  ADDRESS: "ckt1qyq8uqrxpw9tzg4u5waydrzmdmh8raqt0k8qmuetsf",\n  ARGS: "0x7e00660b8ab122bca3ba468c5b6eee71f40b7d8e",\n  LOCKHASH: "0xf6ea009a4829de7aeecd75f3ae6bcdbaacf7328074ae52a48456a8793a4b1cca"\n};\n\nexport const BOB = {\n  PRIVATE_KEY:\n    "0x670ac6ac1ce8004b4220f0fb024179461f11989ff4d446816f78813b80b9c696",\n  ADDRESS: "ckt1qyqwe03shn6udvhjmrkzm53f53sr5l3qdwvsytj4hs",\n  ARGS: "0xecbe30bcf5c6b2f2d8ec2dd229a4603a7e206b99",\n  LOCKHASH: "0x34f085b5d2fa3f4ad2880713082a72864522a6ebffa1eb931b09e0407092eda5",\n};\n')),Object(c.b)("h3",{id:"build-the-project"},"Build the project."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"$ tsc\n")),Object(c.b)("h3",{id:"enter-the-nodejs-repl-mode"},"Enter the Node.js REPL mode."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ node --experimental-repl-await\n")),Object(c.b)("details",null,Object(c.b)("summary",null,"CLICK ME"),Object(c.b)("p",null,Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'Welcome to Node.js v14.0.0.\nType ".help" for more information.\n')))),Object(c.b)("h3",{id:"execute-the-indexjs-file-to-start-the-server-and-include-the-required-modules"},"Execute the index.js file to start the server and include the required modules."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'> const {accounts,querycells,buildTXs,querytransactions} = require(".");\n')),Object(c.b)("details",null,Object(c.b)("summary",null,"CLICK ME"),Object(c.b)("p",null,Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"The server is started.\n")))),Object(c.b)("h3",{id:"perform-a-common-transfer-transaction"},"Perform a common transfer transaction."),Object(c.b)("p",null,"Step 1. Get the lock script for the accounts of Alice and Bob."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'> const alice = accounts.ALICE;\n> const bob = accounts.BOB;\n> const { parseAddress }=require("@ckb-lumos/helpers");\n> const script1 = parseAddress(alice.ADDRESS);\n> const script2 = parseAddress(bob.ADDRESS);\n> console.log(script1);\n')),Object(c.b)("details",null,Object(c.b)("summary",null,"CLICK ME"),Object(c.b)("p",null,Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"{\n  code_hash: '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8',\n  hash_type: 'type',\n  args: '0x7e00660b8ab122bca3ba468c5b6eee71f40b7d8e'\n}\n")))),Object(c.b)("p",null,"Step 2. Get the balance for the accounts of Alice and Bob."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"> const balance1 = querycells.getBalancebyLock(script1);\n> The balance of the account is 5908399726984497n\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"> const balance2 = querycells.getBalancebyLock(script2);\n> The balance of the account is 000000000000n\n")),Object(c.b)("p",null,"Step 3. Assemble a common transfer transaction. "),Object(c.b)("p",null,"The buildCommonTx() function performs the following actions: "),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Create a new Transaction Skeleton."),Object(c.b)("li",{parentName:"ul"},"Add transfer action to the skeleton by using ",Object(c.b)("inlineCode",{parentName:"li"},"common.transfer"),"."),Object(c.b)("li",{parentName:"ul"},"Add pay fee for the transaction by using ",Object(c.b)("inlineCode",{parentName:"li"},"common.payFee"),"."),Object(c.b)("li",{parentName:"ul"},"Prepare signing entries by using ",Object(c.b)("inlineCode",{parentName:"li"},"common.prepareSigningEntries"),".")),Object(c.b)("p",null,"For more information about assembling a transaction, see ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"../tutorials/buildtransactions"}),"Assemble Transactions"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"> const txskeleton = await buildTXs.buildCommonTx(alice.ADDRESS, bob.ADDRESS,20000000000n,10000000n);\n")),Object(c.b)("p",null,"Step 4. Sign the transaction."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'> const message = txskeleton.get("signingEntries").get(0)?.message;\n> console.log(message);\n0x7b9f14c93c1105213ab437f157460aa93963babff4cb03553e7dde6e72cbaf19\n> const privatekey1 = alice.PRIVATE_KEY;\n> const { key }=require("@ckb-lumos/hd");\n> const Sig = key.signRecoverable(message, privatekey1);\n> console.log(Sig);\n0x709026a75b82aca580d758c62eceaa9982b81057146a6c0205db3ee7b5581e3201d3ccd5845ea6d25b9b977f98f7c1c74efe4c38292b654d03fa2d037fa0777b01\n')),Object(c.b)("p",null,"Step 5. Seal the transaction."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'> const { sealTransaction }=require("@ckb-lumos/helpers");\n> const tx = sealTransaction(txskeleton, [Sig]);\n')),Object(c.b)("p",null,"Step 6. Send the transaction."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'> const { RPC }=require("@ckb-lumos/rpc");\n> const rpc = new RPC("http://127.0.0.1:8114");\n> const hash = await rpc.send_transaction(tx);\n> console.log(hash);\n0xe332fb6efba38e16b8fd20a4f47d5fffcf8fcac0c863b0eb30ef75067847936d\n')),Object(c.b)("p",null,"Step 7. Check the transaction status."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"> const txWithStatus= await rpc.get_transaction(hash);\n> console.log(txWithStatus.tx_status.status);\ncommitted\n")),Object(c.b)("p",null,"Step 8. Check the new balance of Bob."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"> const newbalance = querycells.getBalancebyLock(script2);\n> The balance of the account is 20000000000n\n")))}b.isMDXComponent=!0}}]);