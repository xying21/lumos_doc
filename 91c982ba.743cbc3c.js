(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,d=p["".concat(c,".").concat(u)]||p[u]||m[u]||o;return n?r.a.createElement(d,i(i({ref:t},l),{},{components:n})):r.a.createElement(d,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=u;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),o=(n(0),n(112)),c={id:"intro",title:"Overview",sidebar_label:"Overview"},i={unversionedId:"introduction/intro",id:"introduction/intro",isDocsHomePage:!1,title:"Overview",description:"Introduction",source:"@site/docs\\introduction\\intro.md",slug:"/introduction/intro",permalink:"/lumos_doc/docs/introduction/intro",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/introduction/intro.md",version:"current",sidebar_label:"Overview",sidebar:"someSidebar",next:{title:"Prerequisites",permalink:"/lumos_doc/docs/introduction/prerequisites"}},b=[{value:"Introduction",id:"introduction",children:[]},{value:"Architecture",id:"architecture",children:[]},{value:"Resources",id:"resources",children:[]}],l={toc:b};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"introduction"},"Introduction"),Object(o.b)("p",null,"Lumos is an open-source framework that was developed by the Nervos Developer Tools team for building Nervos CKB DApps. "),Object(o.b)("p",null,"All the DApps running on CKB separate functionally into two parts: computation and verification, according to the programming model of CKB. For more information about the CKB programming model, see ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0002-ckb/0002-ckb.md"}),"CKB whitepaper"),"."),Object(o.b)("p",null,"The desktop applications or web server applications that run in NodeJS environment and serve as the off-chain computation part can be developed on top of Lumos. "),Object(o.b)("h2",{id:"architecture"},"Architecture"),Object(o.b)("p",null,"Lumos provides a set of fully comprehensive features and utilities with the components as shown in the figure of the architecture."),Object(o.b)("p",null,"The fundamental components, such as the ",Object(o.b)("strong",{parentName:"p"},"Lumos indexer"),", ",Object(o.b)("strong",{parentName:"p"},"common scripts")," and the ",Object(o.b)("strong",{parentName:"p"},"RPC")," components enable the DApp to query cells, assemble transactions and communicate with the CKB network."),Object(o.b)("img",{src:"../../../img/CKB dapp with Lumos.png",width:"600"}),Object(o.b)("p",null,"Figure 1 Architecture of a CKB DApp Built with Lumos"),Object(o.b)("p",null,"The components can be classified into several groups according to their features."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Helper and Config"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Base"),": The base component (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/base"),") includes the core definitions and stateless functions that can be used in the other components. The ",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/base")," package can be used as a standalone library.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Helpers"),": The helpers component (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/helpers"),") defines interfaces, types "," and utilities that require to work under a CKB network. The network, testnet or mainnet, is specified by the config manager.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Config Manager"),": The config manager component (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/config-manager"),") connects to Nervos networks and deploys contracts to a locally running instance or one of Nervos's public networks.")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Cell Provider"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Lumos Indexer"),": The Lumos indexer (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/indexer")," and ",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/sql-indexer"),") is a CKB cell indexer that fulfills the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.nervos.org/docs/reference/cell#index-query-assemble-pattern"}),"Index-Query-Assemble")," pattern. The Lumos indexer indexes cells and maintains a local database of the cells that provides an optimal way for querying cells.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Transaction Manager"),": The transaction manager (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/transaction-manager"),") can serve as an optional cell provider that enables the output cells of pending transactions to be usable for assembling new transactions.")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Transaction Generator"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Common Scripts"),": The common scripts component (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/common-scripts"),") integrates known scripts on CKB. The scripts use a cell provider (the Lumos indexer or ",Object(o.b)("inlineCode",{parentName:"p"},"transactionManager"),") to collect cells and assemble transactions. Each script implements a specific  ",Object(o.b)("inlineCode",{parentName:"p"},"TransactionSkeleton"),"  for building transactions that forms a unified workflow for transaction generation."),Object(o.b)("p",{parentName:"li"},"The common scripts component can also integrate and leverage user customized CKB scripts. An example is included in the ",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/common-scripts")," package.")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Communication"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"RPC"),": The RPC component (",Object(o.b)("inlineCode",{parentName:"li"},"@ckb-lumos/rpc"),") interacts with the CKB network, communicating block and transaction information with CKB nodes."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Other Functions"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"HD cache manager"),": The HD cache manager (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/hd-cache"),") builds a memory cache for derived addresses and live cells of these addresses. It supports query functions, such as querying the balance of an HD wallet.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"HD wallet manager"),": The HD wallet manager (",Object(o.b)("inlineCode",{parentName:"p"},"@ckb-lumos/hd"),") supports ",Object(o.b)("em",{parentName:"p"},"mnemonic")," and ",Object(o.b)("em",{parentName:"p"},"keystore")," that are compatible with ",Object(o.b)("inlineCode",{parentName:"p"},"Neuron")," and ",Object(o.b)("inlineCode",{parentName:"p"},"ckb-cli"),"."))))),Object(o.b)("h2",{id:"resources"},"Resources"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Resource"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Link"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Website"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"https://docs.nervos.org/"}),"https://docs.nervos.org/"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"API Documentation"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"https://nervosnetwork.github.io/lumos/globals.html"}),"https://nervosnetwork.github.io/lumos/globals.html"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Source Code"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"https://github.com/nervosnetwork/lumos"}),"https://github.com/nervosnetwork/lumos"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Tutorial"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"https://docs.nervos.org/docs/labs/lumos-nervosdao"}),"Intro to Lumos"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Video Lecture"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("ul",null,Object(o.b)("li",null,Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"https://youtu.be/TJ2bnSFUpPQ"}),"Dapps with CKB Workshop - Lecture 3: Dapps with Lumos (Chinese + English Subtitles)")),Object(o.b)("li",null,Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"https://youtu.be/9U23hrzCAiM"}),"Dapps with CKB Workshop - Lecture 4: Dapp Architecture with Lumos (English)"))))))))}s.isMDXComponent=!0}}]);