(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(c,".").concat(d)]||u[d]||b[d]||i;return n?a.a.createElement(m,l(l({ref:t},s),{},{components:n})):a.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<i;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),i=(n(0),n(102)),c={id:"cells",title:"Cells"},l={unversionedId:"tutorials/cells",id:"tutorials/cells",isDocsHomePage:!1,title:"Cells",description:"Cells are the primary state units in CKB, within them users can include arbitrary states. A cell has the following fields:",source:"@site/docs\\tutorials\\cells.md",slug:"/tutorials/cells",permalink:"/lumos_doc/docs/tutorials/cells",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/tutorials/cells.md",version:"current"},o=[],s={toc:o};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Cells are the primary state units in CKB, within them users can include arbitrary states. A cell has the following fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"capacity")," "),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"capacity")," represents the amount of CKB tokens stored in the cell."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"capacity")," is also the size limit on how much information the cell can store.")),Object(i.b)("p",{parentName:"li"},"The basic unit for capacity is ",Object(i.b)("inlineCode",{parentName:"p"},"shannon"),", a bigger unit ",Object(i.b)("inlineCode",{parentName:"p"},"CKByte"),", or just ",Object(i.b)("inlineCode",{parentName:"p"},"CKB")," is also used. 1 CKB equals ",Object(i.b)("inlineCode",{parentName:"p"},"10**8")," shannons, 1 CKB also means the cell can store 1 byte of information. See below for how to calculate the total information size of a cell. ")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"data"),": State data stored in this cell. It could be empty, however the total bytes used by a cell (including data), must be less than or equal to its capacity. ",Object(i.b)("inlineCode",{parentName:"p"},"data"),"  is just a series of unformatted binary data. Depending on each DApp, anything could be stored in the cell ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Script code as explained in ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.nervos.org/docs/reference/script"}),"Script"),"."),Object(i.b)("li",{parentName:"ul"},"Token amount for User Defined Token cells."),Object(i.b)("li",{parentName:"ul"},"Latest game stats for an on-chain fantasy game."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"lock script"),": ",Object(i.b)("inlineCode",{parentName:"p"},"lock script")," represents the ownership of a cell. When a specified cell is used as an input cell in a transaction, the ",Object(i.b)("inlineCode",{parentName:"p"},"lock script")," included in the cell is executed for signature verification. If the ",Object(i.b)("inlineCode",{parentName:"p"},"lock script")," fails in the verification, the transaction will be rejected.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"type script"),": ",Object(i.b)("inlineCode",{parentName:"p"},"type script")," is executed to validate cell structure of both input cells and output cells included in a transaction. Due to this nature, ",Object(i.b)("inlineCode",{parentName:"p"},"type script")," is typically used to validate DApp logic, such as creating UDTs."))),Object(i.b)("p",null,"For more information about the cell model, see ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.nervos.org/docs/reference/cell"}),"Cell Data Structure"),"."))}p.isMDXComponent=!0}}]);