(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{110:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var a=n(0),c=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,c=function(e,t){if(null==e)return{};var n,a,c={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var d=c.a.createContext({}),p=function(e){var t=c.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return c.a.createElement(d.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},u=c.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,d=b(e,["components","mdxType","originalType","parentName"]),s=p(n),u=a,m=s["".concat(o,".").concat(u)]||s[u]||l[u]||r;return n?c.a.createElement(m,i(i({ref:t},d),{},{components:n})):c.a.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var d=2;d<r;d++)o[d]=n[d];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(3),c=n(7),r=(n(0),n(110)),o={id:"createaccount",title:"Create an Account for CKB Transactions"},i={unversionedId:"tutorials/createaccount",id:"tutorials/createaccount",isDocsHomePage:!1,title:"Create an Account for CKB Transactions",description:"This guide introduces how to generate a new account with enough CKB capacities that can be used for developing and testing operations.",source:"@site/docs\\tutorials\\account.md",slug:"/tutorials/createaccount",permalink:"/lumos_doc/docs/tutorials/createaccount",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/tutorials/account.md",version:"current",sidebar:"someSidebar",previous:{title:"Set Up the SQL Database",permalink:"/lumos_doc/docs/tutorials/database"},next:{title:"Query on Cells",permalink:"/lumos_doc/docs/tutorials/cells"}},b=[{value:"Create an Account by Using the HD Wallet Manager",id:"create-an-account-by-using-the-hd-wallet-manager",children:[{value:"Step 1. Create an extended private key.",id:"step-1-create-an-extended-private-key",children:[]},{value:"Step 2. Open a new terminal and import the private key to create a new account.",id:"step-2-open-a-new-terminal-and-import-the-private-key-to-create-a-new-account",children:[]}]},{value:"Create an Account by Using ckb-cli",id:"create-an-account-by-using-ckb-cli",children:[]},{value:"Get CKB Capacity for the Account",id:"get-ckb-capacity-for-the-account",children:[]}],d={toc:b};function p(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This guide introduces how to generate a new account with enough CKB capacities that can be used for developing and testing operations."),Object(r.b)("p",null,"The following two methods are described in this guide for creating a new account:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Create an account by using the ckb-cli tool. "),Object(r.b)("li",{parentName:"ul"},"Create an account by using the HD wallet manager: The HD wallet manager supports to generate extended private keys (",Object(r.b)("inlineCode",{parentName:"li"},"privateKey")," and ",Object(r.b)("inlineCode",{parentName:"li"},"chaincode"),"). The ",Object(r.b)("inlineCode",{parentName:"li"},"privateKey")," can be used to create accounts on chain. This method is used when the private key of the account is required during the development or testing process. ")),Object(r.b)("h2",{id:"create-an-account-by-using-the-hd-wallet-manager"},"Create an Account by Using the HD Wallet Manager"),Object(r.b)("h3",{id:"step-1-create-an-extended-private-key"},"Step 1. Create an extended private key."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"> const { mnemonic, ExtendedPrivateKey } = require(\"@ckb-lumos/hd\");\n> const m = mnemonic.generateMnemonic();\n> const seed = mnemonic.mnemonicToSeedSync(m);\n> const extendedPrivateKey = ExtendedPrivateKey.fromSeed(seed);\n> console.log(extendedPrivateKey);\nExtendedPrivateKey {\n  privateKey: '0x143f8236e711b972a34e9e44795494fa4e65aba2bd3abee2f3c572f945091485',\n  chainCode: '0x9bbf03c1de73889ef34b7645b31ecac124268a6e4f5cabc26dcb4fb2c9fb06ef'\n}\n")),Object(r.b)("h3",{id:"step-2-open-a-new-terminal-and-import-the-private-key-to-create-a-new-account"},"Step 2. Open a new terminal and import the private key to create a new account."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"$ echo 0x8a4cb53f641ee8df90cf5bc5204574744657a091dfe41c98069aa4e41ed9c86b > pk\n$ export TOP=$(pwd)\n$ export PATH=$PATH:$TOP/ckb_v0.40.0-rc1_x86_64-unknown-centos-gnu\n$ ckb-cli account import --privkey-path pk\nPassword:\naddress:\n  mainnet: ckb1qyqv6dfjmelhmrej2g5ju2d4994xkd462d5sqwfdxt\n  testnet: ckt1qyqv6dfjmelhmrej2g5ju2d4994xkd462d5sathj2h\nlock_arg: 0xcd3532de7f7d8f3252292e29b5296a6b36ba5369\n")),Object(r.b)("h2",{id:"create-an-account-by-using-ckb-cli"},"Create an Account by Using ckb-cli"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"$ ckb-cli account new\naccount new\nYour new account is locked with a password. Please give a password. Do not forget this password.\nPassword: \nRepeat password: \naddress:\n  mainnet: ckb1qyqxdzuvueply4fgzhm9k283ma043pqw52yqwzk02v\n  testnet: ckt1qyqxdzuvueply4fgzhm9k283ma043pqw52yqn8gsxs\nlock_arg: 0x668b8ce643f2552815f65b28f1df5f58840ea288\nlock_hash: 0x17323019e0ad96fbe450622a6bd059cc839b93fa2dcccfe3db55af991fd6b260\n")),Object(r.b)("h2",{id:"get-ckb-capacity-for-the-account"},"Get CKB Capacity for the Account"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If you are running a ",Object(r.b)("strong",{parentName:"p"},"DEV blockchain"),", specify the ",Object(r.b)("inlineCode",{parentName:"p"},"args")," in the ",Object(r.b)("inlineCode",{parentName:"p"},"block_assembler")," section in ckb.toml with the ",Object(r.b)("inlineCode",{parentName:"p"},"lock_arg")," of the account for receiving mining rewards. "),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'$ ed devnet/ckb.toml <<EOF\n143a\n[block_assembler]\ncode_hash = "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8"\nargs = "0xcd3532de7f7d8f3252292e29b5296a6b36ba5369"\nhash_type = "type"\nmessage = "0x"\n.\nwq\nEOF\n')),Object(r.b)("p",{parentName:"li"},"Then restart the CKB node and start the CKB miner in a different terminal."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"$ export TOP=$(pwd)\n$ export PATH=$PATH:$TOP/ckb_v0.40.0_x86_64-unknown-linux-gnu.tar.gz\n$ ckb miner -C devnet\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If you are running a ",Object(r.b)("strong",{parentName:"p"},"Testnet")," node, go to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://faucet.nervos.org"}),"https://faucet.nervos.org")," and paste the account address in the address inputbox, then click the Claim button."),Object(r.b)("p",{parentName:"li"},"50,000 CKB can be claimed for each Testnet address from the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://faucet.nervos.org/"}),"faucet")," per 24 hours. The CKB balance can checked in the ckb-cli interface."),Object(r.b)("p",{parentName:"li"},"To check the capacity of the account by running ",Object(r.b)("inlineCode",{parentName:"p"},"ckb-cli wallet get-capacity --address <the Testnet address of the account>"),":"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'$ ckb-cli wallet get-capacity --address "ckt1qyqv6dfjmelhmrej2g5ju2d4994xkd462d5sathj2h"\nimmature: 8039065.13953246 (CKB)\ntotal: 38186544.69769654 (CKB)\n')))))}p.isMDXComponent=!0}}]);