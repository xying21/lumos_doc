(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{110:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,f=d["".concat(o,".").concat(u)]||d[u]||l[u]||c;return n?a.a.createElement(f,i(i({ref:t},p),{},{components:n})):a.a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=u;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<c;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),c=(n(0),n(110)),o={id:"createaccount",title:"Create an Account for CKB Transactions"},i={unversionedId:"tutorials/createaccount",id:"tutorials/createaccount",isDocsHomePage:!1,title:"Create an Account for CKB Transactions",description:"This step generates a new account that can be used for developing and testing operations.",source:"@site/docs\\tutorials\\account.md",slug:"/tutorials/createaccount",permalink:"/lumos_doc/docs/tutorials/createaccount",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/tutorials/account.md",version:"current",sidebar:"someSidebar",previous:{title:"Set Up the SQL Database",permalink:"/lumos_doc/docs/tutorials/database"},next:{title:"Query on Cells",permalink:"/lumos_doc/docs/tutorials/cells"}},b=[{value:"Steps",id:"steps",children:[]}],p={toc:b};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"This step generates a new account that can be used for developing and testing operations."),Object(c.b)("h2",{id:"steps"},"Steps"),Object(c.b)("p",null,"To import create a new account :"),Object(c.b)("p",null,"Step 1. Create an extended private key by using the HD wallet manager."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"> const { mnemonic, ExtendedPrivateKey } = require(\"@ckb-lumos/hd\");\n> const m = mnemonic.generateMnemonic();\n> const seed = mnemonic.mnemonicToSeedSync(m);\n> const extendedPrivateKey = ExtendedPrivateKey.fromSeed(seed);\n> console.log(extendedPrivateKey);\nExtendedPrivateKey {\n  privateKey: '0x143f8236e711b972a34e9e44795494fa4e65aba2bd3abee2f3c572f945091485',\n  chainCode: '0x9bbf03c1de73889ef34b7645b31ecac124268a6e4f5cabc26dcb4fb2c9fb06ef'\n}\n")),Object(c.b)("p",null,"Step 2. Open a new terminal and import the private key to create a new account."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"$ echo 0x8a4cb53f641ee8df90cf5bc5204574744657a091dfe41c98069aa4e41ed9c86b > pk\n$ export TOP=$(pwd)\n$ export PATH=$PATH:$TOP/ckb_v0.40.0-rc1_x86_64-unknown-centos-gnu\n$ ckb-cli account import --privkey-path pk\nPassword:\naddress:\n  mainnet: ckb1qyqv6dfjmelhmrej2g5ju2d4994xkd462d5sqwfdxt\n  testnet: ckt1qyqv6dfjmelhmrej2g5ju2d4994xkd462d5sathj2h\nlock_arg: 0xcd3532de7f7d8f3252292e29b5296a6b36ba5369\n")),Object(c.b)("p",null,"Step 3. Specify the ",Object(c.b)("inlineCode",{parentName:"p"},"args")," in the ",Object(c.b)("inlineCode",{parentName:"p"},"block_assembler")," section in ckb.toml with ",Object(c.b)("inlineCode",{parentName:"p"},"lock_arg")," for receiving mining rewards."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),'$ ed devnet/ckb.toml <<EOF\n143a\n[block_assembler]\ncode_hash = "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8"\nargs = "0xcd3532de7f7d8f3252292e29b5296a6b36ba5369"\nhash_type = "type"\nmessage = "0x"\n.\nwq\nEOF\n')),Object(c.b)("p",null,"Step 4. Restart the CKB node and start the CKB miner in a different terminal."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"$ export TOP=$(pwd)\n$ export PATH=$PATH:$TOP/ckb_v0.40.0-rc1_x86_64-unknown-centos-gnu\n$ ckb miner -C devnet\n")),Object(c.b)("p",null,"Step 5. Check the capacity of the account by using the testnet address."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),'$ ckb-cli wallet get-capacity --address "ckt1qyqv6dfjmelhmrej2g5ju2d4994xkd462d5sathj2h"\nimmature: 8039065.13953246 (CKB)\ntotal: 38186544.69769654 (CKB)\n')))}s.isMDXComponent=!0}}]);