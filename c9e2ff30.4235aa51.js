(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{109:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),c=(n(0),n(123)),l={id:"cells",title:"Cells"},i={unversionedId:"concepts/cells",id:"concepts/cells",isDocsHomePage:!1,title:"Cells",description:"A Cell is the most basic structure that represents a single piece of data in Nervos. The data contained in a Cell can take many forms, including CKBytes, tokens, code like JavaScript code, or even serialized data like JSON strings.",source:"@site/docs\\concepts\\cells.md",slug:"/concepts/cells",permalink:"/lumos_doc/docs/concepts/cells",editUrl:"https://github.com/xying21/lumos_doc/tree/master/docs/concepts/cells.md",version:"current"},o=[{value:"Data Structure",id:"data-structure",children:[]}],b={toc:o};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"A Cell is the most basic structure that represents a single piece of data in Nervos. The data contained in a Cell can take many forms, including CKBytes, tokens, code like JavaScript code, or even serialized data like JSON strings."),Object(c.b)("h2",{id:"data-structure"},"Data Structure"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Example")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},'{\n  "capacity": "0x19995d0ccf",\n  "lock": {\n    "code_hash": "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",\n    "args": "0x0a486fb8f6fe60f76f001d6372da41be91172259",\n    "hash_type": "type"\n  },\n  "type": null\n}\n')),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Description")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Field"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"capacity")),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("ul",null,Object(c.b)("li",null,"The amount of CKB tokens stored in the cell."),Object(c.b)("li",null,"The size limit on how much information the cell can store.")),"The basic unit for ",Object(c.b)("inlineCode",{parentName:"td"},"capacity")," is ",Object(c.b)("inlineCode",{parentName:"td"},"shannon"),". A bigger unit ",Object(c.b)("inlineCode",{parentName:"td"},"CKByte"),", or just ",Object(c.b)("inlineCode",{parentName:"td"},"CKB")," is also used. 1 CKB equals ",Object(c.b)("inlineCode",{parentName:"td"},"10**8")," shannons. 1 CKB also means the cell that can store 1 byte of information.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"data")),Object(c.b)("td",{parentName:"tr",align:null},"State data stored in this cell.",Object(c.b)("br",null),"The following data can be stored in the ",Object(c.b)("inlineCode",{parentName:"td"},"data")," field:",Object(c.b)("ul",null,Object(c.b)("li",null,"Script code as explained in ",Object(c.b)("a",{parentName:"td",href:"https://docs.nervos.org/docs/reference/script"},"Script"),"."),Object(c.b)("li",null,"Token amount for User Defined Token cells."),Object(c.b)("li",null,"The latest game states for an on-chain fantasy game.")),Object(c.b)("strong",{parentName:"td"},"Note"),": The ",Object(c.b)("inlineCode",{parentName:"td"},"data")," field can be empty. The total bytes used by a cell (including data) must be less than or equal to the capacity of the cell.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"lock"),"\xa0","script"),Object(c.b)("td",{parentName:"tr",align:null},"The ownership of a cell.",Object(c.b)("br",null),"When a specified cell is used as an input cell in a transaction, the ",Object(c.b)("inlineCode",{parentName:"td"},"lock script")," included in the cell is executed for signature verification. If the ",Object(c.b)("inlineCode",{parentName:"td"},"lock script")," fails in the verification, the transaction will be rejected.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"type"),"\xa0","script"),Object(c.b)("td",{parentName:"tr",align:null},"The script to be executed to validate the structure of both input cells and output cells included in a transaction.",Object(c.b)("br",null),Object(c.b)("inlineCode",{parentName:"td"},"type")," script is typically used to validate a DApp logic, such as creating UDTs.")))),Object(c.b)("p",null,"For more information about the cell model, see ",Object(c.b)("a",{parentName:"p",href:"https://docs.nervos.org/docs/reference/cell"},"Cell Data Structure")," and ",Object(c.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0002-ckb/0002-ckb.md#42-cell"},"CKB RFC"),"."))}s.isMDXComponent=!0},123:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,m=p["".concat(l,".").concat(u)]||p[u]||d[u]||c;return n?r.a.createElement(m,i(i({ref:t},b),{},{components:n})):r.a.createElement(m,i({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var b=2;b<c;b++)l[b]=n[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);