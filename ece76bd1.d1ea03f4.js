(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{108:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return d}));var r=a(0),n=a.n(r),l=a(22),c=a(120),s=a(118),o=a(122);function i(){const e=Object(l.default)(),{siteConfig:t={}}=e;return n.a.createElement("header",{className:"hero"},n.a.createElement("div",{className:"container margin-vert--lg"},n.a.createElement("h1",{className:"hero__title"},t.title),n.a.createElement("p",{className:"hero__subtitle"},t.tagline),n.a.createElement(s.a,{to:Object(c.a)("docs/quickstart/intro"),className:"button button--primary button--outline button--lg"},"Get Started"),n.a.createElement("div",{className:"button button--link"},n.a.createElement("iframe",{src:"https://ghbtns.com/github-btn.html?user=repeaterjs&repo=repeater&type=star&count=true&size=large",frameBorder:"0",scrolling:"0",width:"160px",height:"30px"}))))}function m({title:e,children:t,color:a="primary"}){return n.a.createElement("div",{className:"col"},n.a.createElement("h2",{className:"text--center text--"+a,style:{color:a}},e),n.a.createElement("p",{className:"text--justify"},t))}function u(){return n.a.createElement("main",{className:"container"},n.a.createElement("div",{className:"row margin-vert--xl"},n.a.createElement(m,{title:"Convenient"},"The ",n.a.createElement("code",null,"Repeater")," class provides a memorable promise-based API for creating async iterators. You can reuse the same constructor to convert event targets, websockets or any other callback-based data source into a format which can be read using ",n.a.createElement("code",null,"async/await")," ","and ",n.a.createElement("code",null,"for await\u2026of")," syntax."),n.a.createElement(m,{title:"Safe",color:"#BA00AC"},"Repeaters prevent common mistakes people make when rolling async iterators by hand. By executing lazily, dealing with backpressure, and propagating errors in a predictable manner, repeaters ensure that event handlers are cleaned up and that bottlenecks and deadlocks are discovered quickly."),n.a.createElement(m,{title:"Powerful",color:"#00B100"},"You can use repeaters to implement architectural patterns like cancelable timers, semaphores, and generic pubsub classes. The Repeater class also defines static methods like"," ",n.a.createElement("code",null,"Repeater.race")," and ",n.a.createElement("code",null,"Repeater.merge")," which allow you to use async iterators for reactive programming purposes.")))}function d(){return n.a.createElement(o.a,null,n.a.createElement(i,null),n.a.createElement(u,null))}}}]);